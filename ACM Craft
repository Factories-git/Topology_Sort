from collections import deque
import sys

input = sys.stdin.readline
re = []
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    time = [0] + list(map(int, input().split()))
    indegree = [0] * (n + 1)
    dp = [0] * (n + 1)
    graph = [[] for i in range(n + 1)]

    for i in range(k):
        s, e = map(int, input().split())
        graph[s].append(e)
        indegree[e] += 1

    queue = deque()

    for i in range(1, n + 1):
        if indegree[i] == 0:
            queue.append(i)
            dp[i] = time[i]
    while queue:
        now = queue.popleft()

        for i_ in graph[now]:
            indegree[i_] -= 1
            dp[i_] = max(dp[now] + time[i_], dp[i_])
            if indegree[i_] == 0:
                queue.append(i_)
    w = int(input())
    re.append(dp[w])

for i in re:
    print(i)
